<?php 

/*function addsmartgroup_install() {
  switch ($GLOBALS['db_type']) {
    case 'mysql':
	db_query("CREATE TABLE IF NOT EXISTS `civicrm_smartgroup_contact` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'primary key',
  `group_id` int(10) unsigned NOT NULL COMMENT 'FK to civicrm_group',
  `contact_id` int(10) unsigned NOT NULL COMMENT 'FK to civicrm_contact',
  PRIMARY KEY (`id`),
  UNIQUE KEY `UI_contact_group` (`contact_id`,`group_id`),
  KEY `FK_civicrm_smartgroup_contact_group_id` (`group_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;");
break;
    case 'mysqli':
      // the {tablename} syntax is so multisite installs can add a
      // prefix to the table name as set in the settings.php file
      db_query("CREATE TABLE IF NOT EXISTS `civicrm_smartgroup_contact` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'primary key',
  `group_id` int(10) unsigned NOT NULL COMMENT 'FK to civicrm_group',
  `contact_id` int(10) unsigned NOT NULL COMMENT 'FK to civicrm_contact',
  PRIMARY KEY (`id`),
  UNIQUE KEY `UI_contact_group` (`contact_id`,`group_id`),
  KEY `FK_civicrm_smartgroup_contact_group_id` (`group_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;");
      break;

      // Pgsql requires keys and indexes to be defined separately.
      // It's important to name the index as {tablename}_fieldname_idx
      // (the trailing _idx!) so update scripts can be written easily
      db_query("CREATE INDEX {node_field_nodereference_data}_field_name_idx
                ON {node_field_nodereference_data} (field_name)");
      break;
  }
}

function addsmartgroup_uninstall() {
  db_query('DROP TABLE {civicrm_smartgroup_contact}');
   cache_clear_all('*', 'cache', TRUE);
  cache_clear_all('*', 'cache_filter', TRUE);
  cache_clear_all('*', 'cache_menu', TRUE);
  cache_clear_all('*', 'cache_page', TRUE);
 }*/
 
/*function addsmartgroup_schema() {
  $schema['test_table'] = array(
    'fields' => array(
      'nid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'primary key' => array('nid'),
    ),
  );
  return $schema;
}*/

/*function addsmartgroup_schema() {
  $schema['civicrm_smartgroup_contact'] = array(
    'description' => t('Table for module addsmartgroup'),
    'fields' => array(
      'id' => array(
        'description' => t('My unique identifier'),
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
		'auto_increment' => true,
      ),
      'group_id' => array(
        'description' => t('Group ID'),
        'type' => 'int',
		 'unsigned' => true,
        'not null' => true,
      ),
	  'contact_id' => array(
        'description' => t('Contact ID'),
        'type' => 'int',
		 'unsigned' => true,
        'not null' => true,
      ),
    ),
    'primary key' => array('id'),
  );
  return $schema;     
}*/


function addsmartgroup_schema_otherdb() {
  $schema['smartgroup_contact'] = array(
    'description' => t('Table for module addsmartgroup'),
    'fields' => array(
      'id' => array(
        'description' => t('My unique identifier'),
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
		'auto_increment' => true,
      ),
      'group_id' => array(
        'description' => t('Group ID'),
        'type' => 'int',
		 'unsigned' => true,
        'not null' => true,
      ),
	  'contact_id' => array(
        'description' => t('Contact ID'),
        'type' => 'int',
		 'unsigned' => true,
        'not null' => true,
      ),
    ),
    'primary key' => array('id'),
  );
  return $schema;
}

function addsmartgroup_install() {
  db_set_active('civi01');
  $schema = addsmartgroup_schema_otherdb();
  foreach ($schema as $name => $table) {
    db_create_table($name, $table);
  }
  db_set_active();
}

function addsmartgroup_uninstall() {
  db_set_active('civi01');
  $schema = addsmartgroup_schema_otherdb();
  foreach ($schema as $name => $table) {
    db_drop_table($name);
  }
  db_set_active();
}
?>